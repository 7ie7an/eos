#+TITLE: EOS: Emacs Appearance
#+PROPERTY: header-args:emacs-lisp :tangle yes
#+PROPERTY: header-args:sh :eval no

#+BEGIN_SRC emacs-lisp
(provide 'eos-appearance)
#+END_SRC

* Emacs Appearance
* Color Theme
:PROPERTIES:
:ID:       EADAA476-50E8-416E-AC6F-13F278735435
:CUSTOM_ID: eba05de0-2322-4a52-b762-2d54b9e8eb56
:END:
If using OSX, the colors and fonts look a bit wonky, so let's fix that

#+BEGIN_SRC emacs-lisp
(setq ns-use-srgb-colorspace t)
;; Anti-aliasing
(setq mac-allow-anti-aliasing t)
#+END_SRC

For light-colored backgrounds, I used [[https://github.com/fniessen/emacs-leuven-theme][leuven-theme]]. For dark-colored backgrounds
(most of the time), I use the tomorrow-night theme, which I find to be a good
balanced of color and pleasing to my eyes.

#+BEGIN_SRC emacs-lisp
(if window-system
    (set-frame-parameter nil 'background-mode eos/background)
  (set-terminal-parameter nil 'background-mode eos/background))

(if (eq eos/background 'dark)
    (use-package color-theme-sanityinc-tomorrow
      :ensure t
      :init (load-theme 'sanityinc-tomorrow-night t))
  (progn
    (use-package leuven-theme
      :ensure t
      :init
      (load-theme 'leuven t)
      ;; Bright white is a bit much, so darken it slightly
      (set-face-background 'default "#f0f0f0"))
    (use-package color-theme-solarized
      :ensure t
      :disabled t
      :init
      (setq color-themes '()) ;; this is required to fix color-theme-solarized
      (load-theme 'solarized t))))
#+END_SRC

* Fonts
:PROPERTIES:
:ID:       92694D10-4647-46AD-A9A7-35B59DF46512
:CUSTOM_ID: ab893513-3d80-47b9-b666-7cee1fab621f
:END:
I've been using [[https://github.com/belluzj/fantasque-sans][Fantasque Sans Mono]] lately, it looks pretty nice to me. On Linux
I've been using Bitstream Vera Sans Mono. I also use [[http://www.marksimonson.com/fonts/view/anonymous-pro][Anonymous Pro]] and
Inconsolata a lot.

Config for OSX:

#+BEGIN_SRC emacs-lisp
(defun eos/setup-osx-fonts ()
  (when (eq system-type 'darwin)
    (set-default-font "Bitstream Vera Sans Mono")
    (set-face-attribute 'default nil :height 120)
    (set-face-attribute 'fixed-pitch nil :height 120)))

(when (eq system-type 'darwin)
  (add-hook 'after-init-hook #'eos/setup-osx-fonts))
#+END_SRC

Config for Linux/X11 systems:

#+BEGIN_SRC emacs-lisp
(defun eos/setup-x11-fonts ()
  (when (eq window-system 'x)
    ;;(set-frame-font "DejaVu Sans Mono")
    ;; See:https://github.com/cpitclaudel/monospacifier
    (set-fontset-font t 'unicode (font-spec :name "DejaVu Sans Mono"))
    (set-fontset-font
     t 'unicode
     (font-spec :name "Asana Math monospacified for DejaVu Sans Mono")
     nil 'append)
    (set-face-attribute 'default nil :height 115)))

(when (eq window-system 'x)
  (add-hook 'after-init-hook #'eos/setup-x11-fonts))
#+END_SRC

Experimental test of Greg's extended faces package

#+BEGIN_SRC emacs-lisp
(when (file-exists-p "~/src/elisp/emacs-extended-faces/")
  (add-to-list 'load-path "~/src/elisp/emacs-extended-faces/")
  (require 'extended-faces))
#+END_SRC

Some helpers to change a buffer to be specifically fixed or variable width

#+BEGIN_SRC emacs-lisp
;; Use variable width font faces in current buffer
(defun eos/buffer-face-mode-variable ()
  "Set font to a variable width (proportional) fonts in current buffer"
  (interactive)
  (setq buffer-face-mode-face '(:family "DejaVu Sans" :height 115))
  (buffer-face-mode))

;; Use monospaced font faces in current buffer
(defun eos/buffer-face-mode-fixed ()
  "Sets a fixed width (monospace) font in current buffer"
  (interactive)
  (setq buffer-face-mode-face '(:family "DejaVu Sans Mono" :height 115))
  (buffer-face-mode))
#+END_SRC

* Emacs' Mode-line

#+BEGIN_SRC emacs-lisp
(use-package smart-mode-line
  :ensure t
  :disabled t
  :init
  (if (eq eos/background 'dark)
      (setq sml/theme eos/background)
    (setq sml/theme 'respectful))
  (sml/setup)
  :config
  (setq sml/shorten-directory t
        sml/shorten-modes t)
  (add-to-list 'sml/replacer-regexp-list '("^~/es/x-plugins/" ":X:"))
  (add-to-list 'sml/replacer-regexp-list '("^~/es/elasticsearch/" ":ES:") t))
#+END_SRC

* The Editor Fringe

So, fringe is nice actually, I set it to the same color as the background so it
blends into the foreground

#+BEGIN_SRC emacs-lisp
(defun eos/set-fringe-background ()
  "Set the fringe background to the same color as the regular background."
  (setq eos/fringe-background-color
        (face-background 'default))
  (custom-set-faces
   `(fringe ((t (:background ,eos/fringe-background-color))))))

(add-hook 'after-init-hook #'eos/set-fringe-background)
#+END_SRC

Show where the buffer ends on the right-hand fringe

#+BEGIN_SRC emacs-lisp
(setq-default indicate-buffer-boundaries 'right)
#+END_SRC
